.d3-container {
  width: 100%;
  height: 600px;
  overflow: auto;
  background-color: var(--theme-background-main, #f9f9f9);
  border-radius: 4px;
  position: relative;
  flex-grow: 1;
}

.svg-container {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden; /* Prevent scrollbars on the SVG container */
}

.no-data {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  color: var(--cnes-dark-gray);
}

svg {
  max-width: 100%;
  max-height: 100%;
}

:host ::ng-deep .tooltip {
  position: absolute;
  display: none;
  background-color: rgba(255, 255, 255, 0.9);
  border: 1px solid #ddd;
  border-radius: 4px;
  padding: 8px 12px;
  font-size: 12px;
  pointer-events: none;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  z-index: 10;
}

/* Connections styling */
.connections {
  pointer-events: none; /* Allow clicking through connections */
}

.connection {
  transition: stroke 0.3s, stroke-opacity 0.3s;
}

/* Define styles for hover states and animations */
.connection.data:hover {
  stroke-opacity: var(--theme-connection-opacity-hover, 1);
  stroke-width: var(--theme-connection-hover-width-data, 3px);
}

.connection.clock:hover {
  stroke-opacity: var(--theme-connection-opacity-hover, 1);
  stroke-width: var(--theme-connection-hover-width-clock, 3px);
}

.connection.control:hover {
  stroke-opacity: var(--theme-connection-opacity-hover, 1);
  stroke-width: var(--theme-connection-hover-width-control, 3.5px);
}

/* Connection types - these replace the styling from ConnectionService */
.connection.data {
  stroke: var(--theme-connection-color-data, #2196F3);
  stroke-width: var(--theme-connection-width-data, 2px);
  stroke-opacity: var(--theme-connection-opacity-default, 0.8);
}

.connection.clock {
  stroke: var(--theme-connection-color-clock, #FF9800);
  stroke-width: var(--theme-connection-width-clock, 2px);
  stroke-opacity: var(--theme-connection-opacity-default, 0.8);
  stroke-dasharray: 5, 3; /* Dashed line for clock signals */
}

.connection.control {
  stroke: var(--theme-connection-color-control, #9C27B0);
  stroke-width: var(--theme-connection-width-control, 2.5px);
  stroke-opacity: var(--theme-connection-opacity-default, 0.8);
  stroke-dasharray: 2, 2; /* Dotted line for control signals */
}

/* When simulation is running */
.is-running .connection.data {
  stroke-opacity: 0.9;
  animation: pulse-data 2s infinite;
}

.is-running .connection.clock {
  stroke-opacity: 1;
  animation: pulse-clock 1s infinite;
}

/* Pulse animation for connections when running */
@keyframes pulse-data {
  0%, 100% { stroke-opacity: 0.6; }
  50% { stroke-opacity: 1; }
}

@keyframes pulse-clock {
  0%, 100% { stroke-opacity: 0.8; }
  50% { stroke-opacity: 1; }
}

/* Components should be draggable */
.component {
  cursor: move;
}

/* Prevent other components from capturing events during active drag */
.component.dragging {
  z-index: 1000; /* Bring to front during drag */
  pointer-events: all !important;
}

.component:not(.dragging) {
  pointer-events: all;
}

/* While any component is being dragged, ignore pointer events on other components */
body.dragging-active .component:not(.dragging) {
  pointer-events: none;
}

/* FPGA D3 Visualization Component Styles */

.visualization-container {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  background-color: var(--fpga-bg-main);
}

svg.fpga-visualization {
  width: 100%;
  height: 100%;
  display: block;
}

/* Components */
.component {
  cursor: pointer;
  transition: var(--fpga-animation-duration) all ease;
}

.component:hover {
  filter: brightness(1.1);
}

.component.selected {
  filter: drop-shadow(0px 0px 5px var(--fpga-color-accent));
}

/* Connection lines */
.connection {
  fill: none;
  stroke-linecap: round;
  stroke-opacity: var(--fpga-connection-opacity-default);
  transition: var(--fpga-animation-duration) all ease;
}

.connection.selected {
  filter: drop-shadow(0px 0px 3px var(--fpga-color-accent));
}

.connection-data {
  stroke: var(--fpga-connection-data);
  stroke-width: var(--fpga-connection-width-data);
  stroke-dasharray: var(--fpga-connection-dash-data);
}

.connection-clock {
  stroke: var(--fpga-connection-clock);
  stroke-width: var(--fpga-connection-width-clock);
  stroke-dasharray: var(--fpga-connection-dash-clock);
}

.connection-control {
  stroke: var(--fpga-connection-control);
  stroke-width: var(--fpga-connection-width-control);
  stroke-dasharray: var(--fpga-connection-dash-control);
}

/* Component pins */
.pin {
  stroke: var(--fpga-color-primary);
  fill: var(--fpga-bg-component);
  cursor: pointer;
}